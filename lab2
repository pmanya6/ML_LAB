from google.colab import files 
diabetes=files.upload() 
from google.colab import files 
adult_income=files.upload() 
df1=pd.read_csv("Dataset of Diabetes .csv") 
df1.head() 
df2=pd.read_csv("adult.csv") 
df2.head() 
df1.info() 
df2.info()
df1.describe() 
df2.describe() 
missing_values1 = df1.isnull().sum() 
print(missing_values1) 
missing_values2 = df2.isnull().sum() 
print(missing_values2) 
df1['Gender'] = df1['Gender'].replace('f', 'F') 
ordinal_encoder = OrdinalEncoder(categories=[["F", "M"]]) 
df1["Gender_Encoded"] = ordinal_encoder.fit_transform(df1[["Gender"]]) 
onehot_encoder = OneHotEncoder() 
encoded_data = onehot_encoder.fit_transform(df1[["CLASS"]]) 
encoded_array = encoded_data.toarray() 
encoded_df = pd.DataFrame(encoded_array, columns=onehot_encoder.get_feature_names_out(["CLASS"])) df_encoded = pd.concat([df1, encoded_df], axis=1) 
df1 = pd.concat([df1, encoded_df], axis=1) 
df1.drop("CLASS", axis=1, inplace=True) 
df1.drop("Gender", axis=1, inplace=True) 
print(df2.head()) 
from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder 
df_copy2 = df2 
ordinal_encoder = OrdinalEncoder(categories=[["Male","Female"]]) 
df_copy2["Gender_Encoded"] = ordinal_encoder.fit_transform(df_copy2[["gender"]]) print(df_copy2[["gender","Gender_Encoded"]]) 
onehot_encoder = OneHotEncoder() 
encoded_data = 
onehot_encoder.fit_transform(df2[["occupation","workclass","education","marital-status","relationship","race","n ative-country","income"]]) 
encoded_array = encoded_data.toarray() 
encoded_df = pd.DataFrame(encoded_array, 
columns=onehot_encoder.get_feature_names_out(["occupation","workclass","education","marital-status","relatio nship","race","native-country","income"])) 
df_encoded = pd.concat([df_copy2, encoded_df], axis=1) 
df_encoded.drop("gender", axis=1, inplace=True) 
df_encoded.drop("occupation", axis=1, inplace=True) 
df_encoded.drop("workclass", axis=1, inplace=True) 
df_encoded.drop("education", axis=1, inplace=True) 
df_encoded.drop("marital-status", axis=1, inplace=True) 
df_encoded.drop("relationship", axis=1, inplace=True) 
df_encoded.drop("race", axis=1, inplace=True) 
df_encoded.drop("native-country", axis=1, inplace=True) 
df_encoded.drop("income", axis=1, inplace=True) 
print(df_encoded. head()) 
normalizer = MinMaxScaler() 
df_encoded[["fnlwgt","educational-num","capital-gain","capital-loss","hours-per-week"]] = normalizer.fit_transform(df_encoded[["fnlwgt","educational-num","capital-gain","capital-loss","hours-per-week"] ]) 
df_encoded.head()
normalizer = MinMaxScaler() 
df1[["No_Pation","AGE","Urea","Cr" , "HbA1c" , "Chol","TG","HDL","LDL","VLDL","BMI"]] = normalizer.fit_transform(df1[["No_Pation","AGE","Urea","Cr" , "HbA1c" , "Chol","TG","HDL","LDL","VLDL","BMI"]]) 
df1.head() 
